name: 'CD Pipeline'

on:
  pull_request: 
    types:
      - closed
    branches:
      - main
    paths:
      - 'src/**'
      
      
jobs:
  
  build:
    name: 'Create Release'
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/src
    
    steps:
      - name: 'Git Checkout'
        uses: actions/checkout@v4
      
      - name: 'Setup Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install OS dependencies'
        run: |
          apt-get -y update && apt-get -y upgrade \
          && apt-get -y install \
              software-properties-common \
              libffi-dev \
              libpq-dev\
              gcc
      
      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: 'Install dependencies'
        id: install_dependencies
        working-directory: ${{ github.workspace }}/src
        run: |
          uv sync
      
      - name: 'Build distribution'
        id: build_distribution
        run: |
          uv build
          echo "PACKAGE_VERSION=$(awk -F'\"' '/name =/ {print $2}' pyproject.toml)" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$(awk -F'\"' '/name =/ {print $2}' pyproject.toml)" >> $GITHUB_ENV
      
      - name: 'Create Release'
        if: github.event.pull_request.merged == true
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.PACKAGE_NAME }}
          tag_name: 'spreadsheet_extractor_v${{ env.PACKAGE_VERSION }}'
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/src/dist/**

      - name: 'Publish release'
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
      